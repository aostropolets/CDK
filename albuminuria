
/* *** BLOCK 8: A-staging: get all urine protein test and corresponding A stage first *** */
/*** Block 8A: build up tmp first to hold all A staging, then add to the table one by one --use datetime ***/
IF OBJECT_ID('tempdb..#tmpUrineTest') IS NOT NULL
	DROP TABLE #tmpUrineTest;
CREATE TABLE #tmpUrineTest (
	person_id INT
	,eventStartDate DATETIME2(6)
	,eventType VARCHAR(100)
	,eventNumValue FLOAT NULL
	,ruleAstage VARCHAR(80) NOT NULL
);

/*** Block 8B: A-staging for A24 and UACR */
INSERT INTO #tmpUrineTest
SELECT DISTINCT person_id, eventStartDate,eventType,eventNumValue
 ,CASE WHEN eventNumValue < 30 THEN 'A1'
	WHEN eventNumValue >= 30 AND eventNumValue <= 300 THEN 'A2'
	WHEN eventNumValue > 300 THEN 'A3' END AS ruleAstage
FROM #tmp
WHERE eventType IN ('LabUacr', 'LabA24');

/*** Block 8C: A-staging for P24 and UPCR (0 value corresponds to A1 stage) ***/
INSERT INTO #tmpUrineTest
SELECT DISTINCT person_id, eventStartDate,eventType,eventNumValue
,CASE WHEN PA1>=PA2 AND PA1>=PA3 THEN 'A1'
	WHEN PA2>=PA1 AND PA2>=PA3 THEN 'A2'
	WHEN PA3>=PA1 AND PA3>=PA2 THEN 'A3' END AS ruleAstage
FROM (
SELECT *, 1-PA1-PA2 AS PA3 
FROM (
SELECT *, 
CASE WHEN eventNumValue = 0 THEN '1' ELSE exp(13.136-2.497*log(eventNumValue)) / (1+exp(13.136-2.497*log(eventNumValue))) END AS PA1
,CASE WHEN eventNumValue = 0 THEN '0' ELSE exp(17.993-2.666*log(eventNumValue)) / (1+exp(17.993-2.666*log(eventNumValue))) - exp(13.136-2.497*log(eventNumValue)) / (1+exp(13.136-2.497*log(eventNumValue))) END AS PA2
FROM #tmp
WHERE eventType IN ('LabP24', 'LabUpcr') 
) J1
) J2;

/*** Block 8D: A-staging for Dipstick Urine Analysis Protein. UA protein data range is Negative, Trace, 1+, 2+, 3+, 4+ ***/
/** UA Protein with co-occurrent SG **/
INSERT INTO #tmpUrineTest
SELECT DISTINCT person_id
,uaProteinDate AS eventStartDate
,eventType
,uaProteinNumValue AS eventNumValue
,CASE WHEN PA1>=PA2 AND PA1>=PA3 THEN 'A1'
	WHEN PA2>=PA1 AND PA2>=PA3 THEN 'A2'
	WHEN PA3>=PA1 AND PA3>=PA2 THEN 'A3' END AS ruleAstage
FROM (
SELECT *, PA1A2-PA1 AS PA2, 1-PA1A2 AS PA3
FROM (
SELECT DISTINCT T1.person_id, T1.eventStartDate AS uaProteinDate
,T1.eventType
,CASE WHEN T1.eventStringValue = 'Negative' THEN 0
	WHEN T1.eventStringValue = 'Trace' THEN 1
	WHEN T1.eventStringValue = '1+' THEN 2
	WHEN T1.eventStringValue IN ('2+', '3+', '4+') THEN 3 END AS uaProteinNumValue
, CASE WHEN T1.eventStringValue = 'Negative' THEN exp(-141.736+140.813*T2.eventNumValue)/(1+exp(-141.736+140.813*T2.eventNumValue))
	WHEN T1.eventStringValue = 'Trace' THEN exp(-143.142+140.813*T2.eventNumValue) / (1+exp(-143.142+140.813*T2.eventNumValue))
	WHEN T1.eventStringValue = '1+' THEN exp(-145.145+140.813*T2.eventNumValue)/(1+exp(-145.145+140.813*T2.eventNumValue))
	WHEN T1.eventStringValue IN ('2+','3+', '4+')  THEN exp(-148.117+140.813*T2.eventNumValue)/(1+exp(-148.117+140.813*T2.eventNumValue))
		 END AS PA1
, CASE WHEN T1.eventStringValue = 'Negative' THEN exp(-200.777+203.011*T2.eventNumValue)/(1+exp(-200.777+203.011*T2.eventNumValue))
	WHEN T1.eventStringValue = 'Trace' THEN exp(-202.959+203.011*T2.eventNumValue)/(1+exp(-202.959+203.011*T2.eventNumValue))
	WHEN T1.eventStringValue = '1+' THEN exp(-204.642+203.011*T2.eventNumValue)/(1+exp(-204.642+203.011*T2.eventNumValue))
	WHEN T1.eventStringValue IN ('2+','3+', '4+')  THEN exp(-208.287+203.011*T2.eventNumValue)/(1+exp(-208.287+203.011*T2.eventNumValue))
		 END AS PA1A2
,T2.eventNumValue AS SgValue
FROM #tmp T1
LEFT JOIN 
	(SELECT *
	FROM #tmp 
	WHERE eventType = 'LabUrineSpecificGravity') T2
ON T1.person_id = T2.person_id 
 AND T1.eventStartDate = T2.eventStartDate
 --AND CAST(T1.eventStartDate AS DATE)= CAST(T2.eventStartDate AS DATE) /* UA protein and SG are measured at the same datetime--depends on each instition's lab order habit*/
WHERE T1.eventType = 'LabUaProtein' AND T2.eventNumValue IS NOT NULL
) J1
) J2
;
/** UA Protein without SG **/
INSERT INTO #tmpUrineTest
SELECT DISTINCT T1.person_id, T1.eventStartDate
,T1.eventType
, CASE WHEN T1.eventStringValue = 'Negative' THEN 0
	WHEN T1.eventStringValue = 'Trace' THEN 1
	WHEN T1.eventStringValue = '1+' THEN 2
	WHEN T1.eventStringValue IN ('2+', '3+', '4+') THEN 3 END AS eventNumValue
,CASE WHEN T1.eventStringValue = 'Negative' THEN 'A1'
	WHEN T1.eventStringValue = 'Trace' THEN 'A1'
	WHEN T1.eventStringValue = '1+' THEN 'A2'
	WHEN T1.eventStringValue IN ('2+', '3+', '4+') THEN 'A3' END AS ruleAstage
FROM #tmp T1
LEFT JOIN 
	(SELECT *
	FROM #tmp 
	WHERE eventType = 'LabUrineSpecificGravity') T2
ON T1.person_id = T2.person_id 
 AND T1.eventStartDate = T2.eventStartDate
  --AND CAST(T1.eventStartDate AS DATE)= CAST(T2.eventStartDate AS DATE) /* UA protein and SG are measured at the same datetime--depends on each instition's lab order habit*/
 WHERE T1.eventType = 'LabUaProtein' AND T2.eventNumValue IS NULL
;


/*** Block 8D_2_Different UA protein data range: A-staging for Dipstick Urine Analysis Protein. UA protein data range is Negative, Trace, 10, 30, 100, 300, >=300, >600 ***/
/** UA Protein with co-occurrent SG **/
/*
INSERT INTO #tmpUrineTest
SELECT DISTINCT person_id
,uaProteinDate AS eventStartDate
,eventType
,uaProteinNumValue AS eventNumValue
,CASE WHEN PA1>=PA2 AND PA1>=PA3 THEN 'A1'
	WHEN PA2>=PA1 AND PA2>=PA3 THEN 'A2'
	WHEN PA3>=PA1 AND PA3>=PA2 THEN 'A3' END AS ruleAstage
FROM (
SELECT *, PA1A2-PA1 AS PA2, 1-PA1A2 AS PA3
FROM (
SELECT DISTINCT T1.person_id, T1.eventStartDate AS uaProteinDate
,T1.eventType
,CASE WHEN T1.eventStringValue = 'Negative' THEN 0
	WHEN T1.eventStringValue = 'Trace' THEN 1
	WHEN T1.eventStringValue = '10' THEN 2
	WHEN T1.eventStringValue = '30' THEN 3
	WHEN T1.eventStringValue IN ('100', '300', '>=300', '>600') THEN 4 END AS uaProteinNumValue
, CASE WHEN T1.eventStringValue = 'Negative' THEN exp(-129.764+129.454*T2.eventNumValue)/(1+exp(-129.764+129.454*T2.eventNumValue))
	WHEN T1.eventStringValue = 'Trace' THEN exp(-143.109+140.777*T2.eventNumValue)/(1+exp(-143.109+140.777*T2.eventNumValue))
	WHEN T1.eventStringValue = '10' THEN exp(-131.101+129.454*T2.eventNumValue)/(1+exp(-131.101+129.454*T2.eventNumValue))
	WHEN T1.eventStringValue = '30' THEN exp(-133.02+129.454*T2.eventNumValue)/(1+exp(-133.02+129.454*T2.eventNumValue))
	WHEN T1.eventStringValue IN ('100', '300', '>=300', '>600')  THEN exp(-136.286+129.454*T2.eventNumValue)/(1+exp(-136.286+129.454*T2.eventNumValue))
		 END AS PA1
, CASE WHEN T1.eventStringValue = 'Negative' THEN exp(-198.543+201.365*T2.eventNumValue)/(1+exp(-198.543+201.365*T2.eventNumValue))
	WHEN T1.eventStringValue = 'Trace' THEN exp(-218.272+231.444*T2.eventNumValue)/(1+exp(-218.272+231.444*T2.eventNumValue))
	WHEN T1.eventStringValue = '10' THEN exp(-200.683+201.365*T2.eventNumValue)/(1+exp(-200.683+201.365*T2.eventNumValue))
	WHEN T1.eventStringValue = '30' THEN exp(-203.25+201.365*T2.eventNumValue)/(1+exp(-203.25+201.365*T2.eventNumValue))
	WHEN T1.eventStringValue IN ('100', '300', '>=300', '>600')  THEN exp(-206.478+201.365*T2.eventNumValue)/(1+exp(-206.478+201.365*T2.eventNumValue))
		 END AS PA1A2
,T2.eventNumValue AS SgValue
FROM #tmp T1
LEFT JOIN 
	(SELECT *
	FROM #tmp 
	WHERE eventType = 'LabUrineSpecificGravity') T2
ON T1.person_id = T2.person_id 
 AND CAST(T1.eventStartDate AS DATE)= CAST(T2.eventStartDate AS DATE)
 */
 --AND T1.eventStartDate = T2.eventStartDate /* UA protein and SG are measured at the same datetime--depends on each instition's lab order habit*/
/*
WHERE T1.eventType = 'LabUaProtein' AND T2.eventNumValue IS NOT NULL
) J1
) J2
;
*/
/** UA Protein without SG **/
/*
INSERT INTO #tmpUrineTest
SELECT DISTINCT T1.person_id, T1.eventStartDate
,T1.eventType
,CASE WHEN T1.eventStringValue = 'Negative' THEN 0
	WHEN T1.eventStringValue = 'Trace' THEN 1
	WHEN T1.eventStringValue = '10' THEN 2
	WHEN T1.eventStringValue = '30' THEN 3
	WHEN T1.eventStringValue IN ('100', '300', '>=300', '>600') THEN 4 END AS eventNumValue
,CASE WHEN T1.eventStringValue = 'Negative' THEN 'A1'
	WHEN T1.eventStringValue = 'Trace' THEN 'A2'
	WHEN T1.eventStringValue = '10' THEN 'A1'
	WHEN T1.eventStringValue = '30' THEN 'A2'
	WHEN T1.eventStringValue IN ('100', '300', '>=300', '>600') THEN 'A3' END AS ruleAstage
FROM #tmp T1
LEFT JOIN 
	(SELECT *
	FROM #tmp 
	WHERE eventType = 'LabUrineSpecificGravity') T2
ON T1.person_id = T2.person_id 
 AND CAST(T1.eventStartDate AS DATE)= CAST(T2.eventStartDate AS DATE)
 WHERE T1.eventType = 'LabUaProtein' AND T2.eventNumValue IS NULL
;
*/

/* Test #tmpUrineTest */
SELECT * FROM (
SELECT *, ROW_NUMBER() OVER(PARTITION BY person_id, eventStartDate ORDER by ruleAstage DESC) AS rn
 FROM (SELECT DISTINCT person_id, eventStartDate, ruleAstage FROM #tmpUrineTest) K1
 ) K1
 WHERE rn>1; 
 
 
/* *** BLOCK 9: For deriving proteinuria status, retrieve most recent A staging and its prior Astaging *** */
/*** Block 9A: get Urine Test that is close to the most recent eGFR. The urine test is no later than 24 month (730 days) before recent eGFR [-24m, now] */
IF OBJECT_ID('tempdb..#tmpUrineTestCloseToRntGfr') IS NOT NULL
	DROP TABLE #tmpUrineTestCloseToRntGfr;
CREATE TABLE #tmpUrineTestCloseToRntGfr (
	person_id INT
	,urineTestDt DATETIME2(6)
	,urineTestType VARCHAR(100)
	,urineTestNumVal FLOAT
	,ruleAstage VARCHAR(80) NOT NULL
	,rn INT NOT NULL
	,eGFRrecentVal FLOAT
	,eGFRrecentDt DATETIME2(6)
	);
INSERT INTO #tmpUrineTestCloseToRntGfr
SELECT G.person_id, U.eventStartDate AS urineTestDt
	, U.eventType AS urineTestType, U.eventNumValue AS urineTestNumVal
	,U.ruleAstage
	,ROW_NUMBER() OVER(PARTITION BY G.person_id ORDER by U.eventStartDate DESC) AS rn
	,G.eGFRrecentVal, G.eGFRrecentDt
FROM #tmpGFRrecent G
LEFT JOIN (SELECT * FROM #tmpUrineTest) U
ON G.person_id = U.person_id 
WHERE U.eventStartDate IS NOT NULL 
AND DATEDIFF(DAY, U.eventStartDate, G.eGFRrecentDt) <= 730; --For acute calculating of 24 months by using 730 days.
    
    
/*** Block 9B: A-staging: get most recent urine test and the prior urine test. The prior urine test is measured at least 3 months prior to the latest urine test ***/
IF OBJECT_ID('tempdb..#tmpUrineTestCloseToRntGfr2') IS NOT NULL
	DROP TABLE #tmpUrineTestCloseToRntGfr2;
CREATE TABLE #tmpUrineTestCloseToRntGfr2 (
	person_id INT
	,urineTestDt DATETIME2(6)
	,urineTestType VARCHAR(100)
	,urineTestNumVal FLOAT
	,ruleAstage VARCHAR(80) NOT NULL
	,diffMonth INT NOT NULL
	,rn INT NOT NULL
	,eGFRrecentVal FLOAT
	,eGFRrecentDt DATETIME2(6)
);
INSERT INTO #tmpUrineTestCloseToRntGfr2
SELECT UJ.person_id, UJ.urineTestDt, UJ.urineTestType, UJ.urineTestNumVal, UJ.ruleAstage, UJ.diffMonth
, ROW_NUMBER() OVER(PARTITION BY person_id ORDER by urineTestDt DESC) AS rn
,UJ.eGFRrecentVal
,UJ.eGFRrecentDt
FROM (
SELECT U.*
, DATEDIFF(MONTH, U.urineTestDt, J.urineTestDt) AS diffMonth
, DATEDIFF(DAY, U.urineTestDt, J.urineTestDt) AS diffDay
FROM #tmpUrineTestCloseToRntGfr U 
 
LEFT JOIN (SELECT * FROM #tmpUrineTestCloseToRntGfr WHERE rn = 1) J
ON U.person_id = J.person_id 
) UJ
WHERE UJ.diffDay = 0 OR UJ.diffMonth >= 3; --this is to keep the most recent urine test and the 3-month-earlier_previous one

/*** Block 9C: A-staging: get most recent Astaging and the prior Astaging ***/
IF OBJECT_ID('tempdb..#tmpAstaging') IS NOT NULL 
DROP TABLE #tmpAstaging;
CREATE TABLE #tmpAstaging (
	person_id INT
	,recentAstage VARCHAR(100)
	,priorAstage VARCHAR(100)
);
INSERT INTO #tmpAstaging
SELECT DISTINCT J1.person_id
,J1.ruleAstage AS recentAstage
,J2.ruleAstage AS priorAstage
FROM (SELECT * FROM #tmpUrineTestCloseToRntGfr2 WHERE rn = 1) J1
LEFT JOIN (SELECT * FROM #tmpUrineTestCloseToRntGfr2 WHERE rn =2) J2
ON J1.person_id = J2.person_id;
